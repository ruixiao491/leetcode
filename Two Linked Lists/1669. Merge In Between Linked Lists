//My solution

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeInBetween(ListNode* list1, int a, int b, ListNode* list2) {
        ListNode* cur=list1;
        int count=0;
        while(cur!=nullptr&&count<a-1)
        {
            cur=cur->next;
            count++;
        }
        ListNode* prev=cur;
        while(cur!=nullptr&&count<b+1)
        {
            cur=cur->next;
            count++;
        }
        ListNode* after=cur;
        cur=list2;
        while(cur->next!=nullptr)
        {
            cur=cur->next;
        }
        cur->next=after;
        prev->next=list2;
        return list1;
        
    }
};
