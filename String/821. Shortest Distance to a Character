///My solution
class Solution {
public:
    vector<int> shortestToChar(string s, char c) {
        vector<int> pos;
        vector<int> ans(s.size(),INT_MAX);
        for(int i=0;i<s.size();i++)
        {
            if(s[i]==c)
            {
                pos.push_back(i);
            }//if
        }//for
        
        for(int i=0;i<s.size();i++)
        {
            for(int j=0;j<pos.size();j++)
            {
                ans[i]=min(ans[i],abs(pos[j]-i));
            }//for j
        }//for i
        
        return ans;
    }
};

###################################################
The solution in the solution part: transverse twice
###################################################
class Solution {
public:
    vector<int> shortestToChar(string s, char c) {
        int n = s.length();
        vector<int> ans(n);

        for (int i = 0, idx = -n; i < n; ++i) {
            if (s[i] == c) {
                idx = i;
            }
            ans[i] = i - idx;
        }

        for (int i = n - 1, idx = 2 * n; i >= 0; --i) {
            if (s[i] == c) {
                idx = i;
            }
            ans[i] = min(ans[i], idx - i);
        }
        return ans;
    }
};

