///My solution:
class Solution {
public:
    int minFlips(int a, int b, int c) {
        int or_result=a|b;
        int and_result=a&b;
        int xor_result=or_result^c;
        int ans=0;
        while(xor_result>0)
        {
            if(xor_result&1==1)
            {
                if(c&1==1)
                {
                    ans=ans+1;
                }
                else
                {
                    if(and_result&1==1)
                    {
                        ans=ans+2;     
                    }
                    else
                    {
                        ans=ans+1;
                    }
                    
                }//else
            }//while
            xor_result=xor_result>>1;
            c=c>>1;
            and_result=and_result>>1;
            
        }//while
        return ans;
        
    }
};

##################################
The solution in the solution part
##################################
class Solution {
public:
    int minFlips(int a, int b, int c) {
        int ans = 0;
        while(a>0||b>0||c>0) 
        {
            int bit_a = a & 1;
            int bit_b = b & 1;
            int bit_c = c & 1;
            if (bit_c == 0) {
                ans += bit_a + bit_b;
            }
            else {
                ans += (bit_a + bit_b == 0);
            }
            a=a>>1;
            b=b>>1;
            c=c>>1;
        }//while
        return ans;
    }
};
