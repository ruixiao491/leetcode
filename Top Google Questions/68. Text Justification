class Solution {
public:
    vector<string> fullJustify(vector<string>& words, int maxWidth) {
        vector<string> ans;
        string s;
        for(int i=0;i<words.size();i++)
        {
            s+=words[i]+" ";
        }//for
        int start=0;
        while(start<s.size())
        {
            int next=start+maxWidth;
            if(next<s.size()&&s[next]==' ')
            {
                next++;
                ans.push_back(s.substr(start,next-start-1));     
            }
            else
            {
                if(next<s.size())
                {
                    while(next>0&&s[next-1]!=' ')
                    {
                        next--;
                    }//while
                    //next--;
                    //std::cout<<next<<std::endl;
                    ans.push_back(s.substr(start,next-start-1));
                }//if
                else
                {
                    ans.push_back(s.substr(start,s.size()-1-start));
                }
                
            }//else
            start=next;
            
        }//while start
        int n=ans.size();
        for(int i=0;i<n-1;i++)
        {
            int length=ans[i].size();
            //std::cout<<ans[i]<<std::endl;
            int space=maxWidth-length;
            int numbers=count(ans[i]);
            if(numbers>0)
            {
                int ave=space/numbers;
                int more=space%numbers;
                for(int j=0;j<ans[i].size();j++)
                {
                    if(ans[i][j]==' ')
                    {
                        int val=0;
                        string a="";
                        while(val<ave)
                        {
                            a+=" ";
                            val++;
                        }//while
                        if(more>0)
                        {
                            a+=" ";
                            more--;
                        }///if
                        ans[i].insert(j,a);
                        j+=ave+1;
                    }//if        
                }//for j           
            }//if numbers>0
            else
            {
                int val=0;
                string a="";
                while(val<space)
                {
                    a+=" ";
                    val++;
                }
                ans[i]+=a;
            }       
        }//for i
        ///The last line;
        int length=ans[n-1].size();
        int space=maxWidth-length;
        int val=0;
        string a="";
        while(val<space)
        {
            a+=" ";
            val++;
        }
        ans[n-1]+=a;
        
        
        return ans;
    }//full
    int count(string s)
    {
        int ans=0;
        for(int i=0;i<s.size();i++)
        {
            if(s[i]==' ')
            {
                ans++;
            }
        }//for
        return ans;
    }//count
};
