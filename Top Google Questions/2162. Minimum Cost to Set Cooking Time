class Solution {
public:
    int minCostSetTime(int startAt, int moveCost, int pushCost, int targetSeconds) {
        int min=targetSeconds/60;
        int sec=targetSeconds%60;
        int ans1=INT_MAX;
        int ans2=INT_MAX;
        vector<int> time;
        vector<int> time2;
        
        if(min>99)
        {
            ans1=INT_MAX;
        }
        else
        {
            if(min>0)
            {
                if(min/10>0)
                {
                    time.push_back(min/10);
                }
                time.push_back(min%10);
                time.push_back(sec/10);
                time.push_back(sec%10);
            }//if
            else
            {
                if(sec/10>0)
                {
                    time.push_back(sec/10);
                }
                time.push_back(sec%10);
            }//else
        
        ans1=cost(startAt, moveCost, pushCost,time);
            //std::cout<<ans1<<std::endl;
        }//else

        
        if(sec+60<=99)
        {
            min=min-1;
            sec=sec+60;
            if(min>0)
            {
                if(min/10>0)
                {
                    time2.push_back(min/10);
                }
                time2.push_back(min%10);
                time2.push_back(sec/10);
                time2.push_back(sec%10);
                ans2=cost(startAt, moveCost, pushCost, time2);
            }//if
            else if(min==0)
            {
                if(sec/10>0)
                {
                    time2.push_back(sec/10);
                }
                time2.push_back(sec%10);
                ans2=cost(startAt, moveCost, pushCost, time2);
            }//else
            //std::cout<<ans2<<std::endl;
            
        }//if
        else
        {
            ans2=INT_MAX;
        }
        return ans1<=ans2 ? ans1:ans2 ;
        
    }
    int cost(int startAt, int moveCost, int pushCost, vector<int> time)
    {
        int ans=0;
        int start=startAt;
        for(int i=0;i<time.size();i++)
        {
            if(start!=time[i])
            {
                ans+=moveCost;
            }
            ans+=pushCost;
            start=time[i];
        }//for
        return ans;
    }//cost
};
