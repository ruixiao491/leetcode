///My solution:
class Solution {
public:
    int numMatchingSubseq(string s, vector<string>& words) {
        sort(words.begin(),words.end());
        vector<int> flag(words.size(),0);
        for(int i=0;i<words.size();i++)
        {
            if(i>0&&words[i]==words[i-1])
            {
                flag[i]=flag[i-1];
            }
            else
            {
                flag[i]=check(s,words,i);
            }
            
        }//for i
        return accumulate(flag.begin(),flag.end(),0);
        
        
    }
    bool check(string a, vector<string>& words, int index)
    {
        int start1=0;
        int start2=0;
        while(start1<a.size())
        {
            if(a[start1]==words[index][start2])
            {
                start1++;
                start2++;
                if(start2==words[index].size())
                {
                    return true;
                }
            }//if
            else
            {
                start1++;
            }
        }//while
        return false;
    }//bool check
};
