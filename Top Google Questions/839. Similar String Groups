class Solution {
public:
    vector<int> f;
    int numSimilarGroups(vector<string>& strs) {
        int n=strs.size();
        f=vector<int>(n);
        for(int i=0;i<n;i++)
        {
            f[i]=i;
        }
        
        for(int i=0;i<n;i++)
        {
            for(int j=i+1;j<n;j++)
            {
                int fi=find(i);
                int fj=find(j);
                if(fi!=fj)
                {
                    if(check(strs[i],strs[j]))
                    {
                       f[fi]=fj; 
                    }
                }//!=
            }//for j
        }//for i
        int ans=0;
        for(int i=0;i<n;i++)
        {
            if(find(i)==i)
            {
                ans++;
            }
        }//fori
        return ans;
        
        
    }
    int find(int x)
    {
        return f[x]==x? x: find(f[x]);
    }//find
    bool check(string a, string b)
    {
        int count=0;
        for(int i=0;i<a.size();i++)
        {
            if(a[i]!=b[i])
            {
                count++;
                if(count>2)
                {
                    return false;
                }
            }
            
        }//for i
        if(count==2||count==0)
        {
            return true;
        }
        else
        {
            return false;
        }
        
    }//check
};
