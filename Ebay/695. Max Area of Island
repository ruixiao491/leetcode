class Solution {
public:
    int maxAreaOfIsland(vector<vector<int>>& grid) {
        int m=grid.size();
        int n=grid[0].size();
        vector<vector<int>> dir={{1,0},{-1,0},{0,1},{0,-1}};
        int ans=0;
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(grid[i][j]!=1) continue;
                queue<pair<int,int>> que;
                que.push({i,j});
                grid[i][j]=2;
                int test=1;
                while(!que.empty())
                {
                    auto it=que.front();
                    que.pop();
                    int row=it.first;
                    int col=it.second;
                    for(int k=0;k<4;k++)
                    {
                        int new_row=row+dir[k][0];
                        int new_col=col+dir[k][1];
                        if(new_row>=0&&new_row<m&&new_col>=0&&new_col<n&&grid[new_row][new_col]==1)
                        {
                            que.push({new_row,new_col});
                            grid[new_row][new_col]=2;
                            test++;
                        }
                    }//for k
                }//while
                ans=max(ans,test);
                
                
            }//for j
        }//for i
        return ans;
        
    }
};
