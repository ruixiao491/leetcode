//My solution:

class Solution {
public:
    int evalRPN(vector<string>& tokens) {
        stack<int> stk;
        for(int i=0;i<tokens.size();i++)
        {
            //std::cout<<tokens[i]<<std::endl;
            if((tokens[i]=="+")||(tokens[i]=="-")||(tokens[i]=="*")||(tokens[i]=="/"))
            {
                int val1=stk.top();
                stk.pop();
                int val2=stk.top();
                stk.pop();
                if(tokens[i]=="+")
                {
                    int val=val1+val2;
                    stk.push(val);
                }//+
                if(tokens[i]=="-")
                {
                    int val=val2-val1;
                    stk.push(val);
                }//-
                if(tokens[i]=="*")
                {
                    int val=val2*val1;
                    stk.push(val);
                }//*
                if(tokens[i]=="/")
                {
                    int val=val2/val1;
                    stk.push(val);
                }
            }//if arithmetic
            else
            {
                int val=stoi(tokens[i]);
                stk.push(val);
            }
        }//for i
        return stk.top();
        
    }
};

##############################################################
//The second solution in the solution part in Chinese version
##############################################################

class Solution {
public:
    int evalRPN(vector<string>& tokens) {
        int n = tokens.size();
        vector<int> stk((n + 1) / 2);
        int index = -1;
        for (int i = 0; i < n; i++) {
            string& token = tokens[i];
            if (token.length() > 1 || isdigit(token[0])) {
                index++;
                stk[index] = atoi(token.c_str());
            } else {
                switch (token[0]) {
                    case '+':
                        index--;
                        stk[index] += stk[index + 1];
                        break;
                    case '-':
                        index--;
                        stk[index] -= stk[index + 1];
                        break;
                    case '*':
                        index--;
                        stk[index] *= stk[index + 1];
                        break;
                    case '/':
                        index--;
                        stk[index] /= stk[index + 1];
                        break;
                }
            }
        }
        return stk[index];
    }
};
