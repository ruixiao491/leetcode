class Solution {
public:
    vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) {
        vector<int> ans;
        map<int,int> seen;
        vector<vector<int>> edge(numCourses);
        queue<int> que;
        for(int i=0;i<prerequisites.size();i++)
        {
            edge[prerequisites[i][1]].push_back(prerequisites[i][0]);
            seen[prerequisites[i][0]]++;
        }//for i
        //std::cout<<seen.size()<<std::endl;
        
        for(int i=0;i<numCourses;i++)
        {
            if(seen.find(i)==seen.end())
            {
                que.push(i);
            }//if
        }//for i
        while(!que.empty())
        {
            int cur=que.front();
            ans.push_back(cur);
            que.pop();
            for(int i=0;i<edge[cur].size();i++)
            {
                seen[edge[cur][i]]--;
                if(seen[edge[cur][i]]==0)
                {
                    que.push(edge[cur][i]);
                }//if
            }//for i
        }//while
        if(ans.size()!=numCourses)
        {
            ans.clear(); 
        }
        
        return ans;
    }//findOrder
};
