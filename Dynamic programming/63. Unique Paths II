class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        int m=obstacleGrid.size();
        int n=obstacleGrid[0].size();
        if(obstacleGrid[0][0]==1||obstacleGrid[m-1][n-1]==1)
        {
            return 0;
        }
        if(m==1||n==1)
        {
            for(int i=0;i<m;i++)
            {
                for(int j=0;j<n;j++)
                {
                    if(obstacleGrid[i][j]==1)
                    {
                        return 0;
                    }
                }//for j
            }//for i
        }//if
        
        vector<vector<int>> dp(m,vector<int>(n,-1));
        dp[0][0]=1;
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(obstacleGrid[i][j]==1)
                {
                    dp[i][j]=0;
                }
                else if(i==0&&j>0)
                {
                    dp[i][j]=dp[i][j-1];
                }
                else if(j==0&&i>0)
                {
                    dp[i][j]=dp[i-1][j];
                }
                
            }//for n
        }//for m
        
        for(int i=1;i<m;i++)
        {
            for(int j=1;j<n;j++)
            {
                if(dp[i][j]!=0)
                {
                    dp[i][j]=dp[i-1][j]+dp[i][j-1];
                }//if        
            }//for j
        }//for i
        
        return dp[m-1][n-1];
    }
};
