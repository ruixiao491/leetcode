class Solution {
public:
    bool isMatch(string s, string p) {
        int m=s.size();
        int n=p.size();
        auto match=[&](int i, int j)
        {
            if(i==0)
            {
                return false;
            }
            if(p[j-1]=='.')
            {
                return true;
            }
            return s[i-1]==p[j-1];
        };//match
        vector<vector<int>> dp(m+1,vector<int>(n+1,0));
        dp[0][0]=1;
        for(int i=0;i<=m;i++)
        {
            for(int j=1;j<=n;j++)
            {
                if(p[j-1]=='*')
                {
                    if(j>=2)
                    {
                        dp[i][j]|=dp[i][j-2];
                    }
                    if(match(i,j-1))
                    {
                        dp[i][j]|=dp[i-1][j];
                    }//if
                }//if
                else
                {
                    if(match(i,j))
                    {
                        dp[i][j]|=dp[i-1][j-1];
                    }
                }
                //std::cout<<i<<" "<<j<<" "<<dp[i][j]<<std::endl;
            }//for j
            
        }//for i
        
        return dp[m][n];
    }
    
};
