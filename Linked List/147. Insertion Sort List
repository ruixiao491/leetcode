/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* insertionSortList(ListNode* head) {
        ListNode* dummyHead = new ListNode(0);
        ListNode* curr=head;
        while(curr!=nullptr)
        {
            //std::cout<<"check head: "<<head->next->next->val<<std::endl;
            ListNode* prev = dummyHead;
            while(prev->next!=nullptr&&prev->next->val<curr->val)
            {
                prev=prev->next;
            }//while prev
            //prev->next value>= curr value
            std::cout<<curr->val<<std::endl;
            ListNode *next=curr->next;
            curr->next=prev->next;
            prev->next=curr;
            
            curr=next;
            //std::cout<<dummyHead->next->val<<std::endl;
            //std::cout<<curr->next->val<<std::endl;
            //std::cout<<"check head: "<<head->next->next->val<<std::endl;
            
            
            
        }//while
        
        return dummyHead->next;
        
        
        
    }
};
