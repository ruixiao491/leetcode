class Solution {
public:
    int countCollisions(string directions) {
        int ans=0;
        stack<char> stk;
        for(int i=0;i<directions.size();i++)
        {
            if(!stk.empty()&&stk.top()=='R')
            {
                if(directions[i]=='L')
                {
                    ans=ans+2;
                    stk.pop();
                    while(!stk.empty()&&stk.top()=='R')
                    {
                        ans=ans+1;
                        stk.pop();
                    }//while
                    stk.push('S');
                    stk.push('S');
                }
                else if(directions[i]=='S')
                {
                    ans=ans+1;
                    stk.pop();
                    while(!stk.empty()&&stk.top()=='R')
                    {
                        ans=ans+1;
                        stk.pop();
                    }//while
                    stk.push('S');
                    stk.push('S');
                }
                else
                {
                    stk.push(directions[i]);
                }
            }// top=R
            else if(!stk.empty()&&stk.top()=='L')
            {
                //stk.pop();
                stk.push(directions[i]);
            }//else if L
            else if(!stk.empty()&&stk.top()=='S')
            {
                if(directions[i]=='L')
                {
                    ans=ans+1;
                    stk.push('S');
                }
                else
                {
                    stk.push(directions[i]);
                }
            }//else if S
            else
            {
                stk.push(directions[i]);
            }
        }//for i
        return ans;
        
    }
};
