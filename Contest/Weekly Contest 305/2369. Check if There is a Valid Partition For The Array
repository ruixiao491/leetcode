class Solution {
public:
    bool validPartition(vector<int>& nums) {
        int n=nums.size();
        vector<int> dp(n+1,0);
        dp[0]=1;
        for(int i=2;i<=n;i++)
        {
            if((dp[i-2]==1&&check(nums,i-2,i-1)==1)||(i-3>=0&&dp[i-3]==1&&check(nums,i-3,i-1)==1))
            {
                dp[i]=1;
            }
        }//for i
        return dp[n];
        
    }
    bool check(vector<int>& nums, int index1, int index2)
    {
        if(index2-index1+1==2)
        {
            if(nums[index2]==nums[index1])
            {
                return true;
            }
            else
            {
                return false;
            }
        }//2
        else if(index2-index1+1==3)
        {
            if(nums[index1]==nums[index1+1]&&nums[index1]==nums[index2])
            {
                return true;
            }
            else if(nums[index1]+1==nums[index1+1]&&nums[index1]+2==nums[index2])
            {
                return true;
            }
            else
            {
                return false;
            }
            
        }//else if
        return false;
    }//check
        
        

};
