class Solution {
public:
    int gcd(int a, int b){
        return b!=0 ? gcd(b,a%b):a;
    }
    int minimumLines(vector<vector<int>>& stockPrices) {
        if(stockPrices.size()==1)
        {
            return 0;
        }
        int n=stockPrices.size();
        auto cmp=[](const vector<int>& a, const vector<int>& b)
        {
            return a[0]<b[0];
        };
        sort(stockPrices.begin(),stockPrices.end(),cmp);
        int y=stockPrices[1][1]-stockPrices[0][1];
        int x=stockPrices[1][0]-stockPrices[0][0];
        int gcdXY=gcd(abs(x),abs(y));
        x/=gcdXY, y/=gcdXY;
        if(x<0&&y<0)
        {
            x=abs(x);
            y=abs(y);
        }
        else if(x>0&&y<0||x<0&&y>0)
        {
            x=abs(x);
            y=-abs(y);
        }
        
        int ans=1;
        for(int i=2;i<n;i++)
        {
            int y1=stockPrices[i][1]-stockPrices[i-1][1];
            int x1=stockPrices[i][0]-stockPrices[i-1][0];
            int gcdXY1=gcd(abs(x1),abs(y1));
            x1/=gcdXY1;
            y1/=gcdXY1;
            if(x1<0&&y1<0)
            {
                x1=abs(x1);
                y1=abs(y1);
            }
            else if(x1>0&&y1<0||x1<0&&y1>0)
            {
                x1=abs(x1);
                y1=-abs(y1);
            }
            if(x==x1&&y==y1) continue;
            else
            {
                ans++;
                x=x1;
                y=y1;
            }
            
        }//for
        return ans;
        
    }
};
