/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int averageOfSubtree(TreeNode* root) {
        vector<int> count;
        vector<int> sum;
        vector<int> res;
        int ans=0;
        helper(root,sum,count,res);
        int n=res.size();
        for(int i=0;i<n;i++)
        {
            int ave=sum[i]/count[i];
            if(res[i]==ave)
            {
                ans++;
            }
        }//for
        //return ans;
        return sum[4];
        
    }//average
    void helper(TreeNode* root, vector<int>&sum, vector<int>&count, vector<int>&res)
    {
        if(root==nullptr)
        {
            return;
        }
        helper(root->left,sum,count,res);
        helper(root->right,sum,count,res);
        
        
    
    }
};
