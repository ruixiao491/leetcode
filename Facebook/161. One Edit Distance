///My solution:
class Solution {
public:
    bool isOneEditDistance(string s, string t){
        if(s==t) return false;
        if(abs((int)s.size()-(int)t.size())>1)
        {
            return false;
        }
        //check replace
        if(s.size()==t.size())
        {
            int count=0;
            for(int i=0;i<s.size();i++)
            {
                if(s[i]!=t[i])
                {
                    count++;
                    if(count>1)
                    {
                        return false;
                    }
                }
            }//for i 
            return true;    
        }//if s.size()==t.size()
        int length1=s.size();
        int length2=t.size();
        if(length1>length2)
        {
            swap(s,t);
            swap(length1,length2);
        }
        int p1=0, p2=0;
        while(p1<length1&&p2<length2)
        {
            if(s[p1]==t[p2])
            {
                p1++;
                p2++;
            }
            else
            {
                p2++;
            }
        }//while
        if(p1!=length1) return false;
        return true;       
        
    }
};
