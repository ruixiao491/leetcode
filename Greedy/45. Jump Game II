///My solution:
class Solution {
public:
    int jump(vector<int>& nums) {
        int count=0;
        int lastPos=nums.size()-1;
        while(lastPos!=0)
        {
            for(int i=0;i<lastPos;i++)
            {
                if(i+nums[i]>=lastPos)
                {
                    lastPos=i;
                    count++;
                    break;
                }//if
            }//for
        }//while
        return count;
        
    }
};

##################################
The solution in the solution part
##################################
class Solution {
public:
    int jump(vector<int>& nums) {
        int maxPos = 0, n = nums.size(), end = 0, step = 0;
        for (int i = 0; i < n - 1; ++i) {
            if (maxPos >= i) {
                maxPos = max(maxPos, i + nums[i]);
                if (i == end) {
                    end = maxPos;
                    ++step;
                    if(end>=n)
                    {
                        break;
                    }
                }
            }
        }
        return step;
    }
};
